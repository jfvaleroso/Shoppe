@model Exchange.Web.Areas.Admin.Models.ProductModel
@{
    ViewBag.Title = "Product History";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-5">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title"><strong>Latest Product Cost</strong></h3>
            </div>
            <div class="panel-body small">

                <table class="table">
                    <tr>
                        <td>Product Type</td>
                        <td>@Html.DisplayFor(model => model.ProductType.Name)</td>
                    </tr>
                    <tr>
                        <td>Product</td>
                        <td>@Html.DisplayFor(model => model.Code)</td>
                    </tr>
                    <tr>
                        <td>Date last modified</td>
                        <td>@Html.DisplayFor(model => model.DateModified)</td>
                    </tr>
                    <tr>
                        <td>Cost</td>
                        <td><h3 class="panel-title"><strong>@ViewBag.RenderCost </strong></h3></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    <div class="col-md-7">

        <div class="table-wrapper">
            <div id="DataTable" class="small">
            </div>
        </div>
        <div class="text-right">
            <button id="btnCancel" class="btn btn-success">Go Back</button>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function() {
        $('#DataTable').jtable({
            title: '',
            paging: true,
            pageSize: 20,
            sorting: false,
            gotoPageArea: 'none',
            pageSizeChangeArea: false,
            columnSelectable: false,
            actions: {
                listAction: '@Url.Action("ProductHistoryListWithPaging")'
            },
            fields: {
                Cost: {
                    title: 'Previous Cost Per Gram',
                    display: function(data) {
                        var $cost = '<strong>' + data.record.Cost + '</strong>';
                        return $cost;
                    }
                },
                ModifiedBy: {
                    title: 'Modified By'
                },
                DateModified: {
                    title: 'Date Modified',
                    display: function(data) {
                        var d = new Date(parseInt(data.record.DateModified.replace('/Date(', '')));
                        var formattedDate = d.getDate() + "-" + (d.getMonth() + 1) + "-" + d.getFullYear();
                        var hours = (d.getHours() < 10) ? "0" + d.getHours() : d.getHours();
                        var minutes = (d.getMinutes() < 10) ? "0" + d.getMinutes() : d.getMinutes();
                        var formattedTime = hours + ":" + minutes;
                        formattedDate = formattedDate + " " + formattedTime;
                        return formattedDate;
                    }
                }

            }

        });

        shoppe.searchDatTableById($("#Id").val());
    });
</script>
@Html.HiddenFor(model => model.Id)
@Html.Hidden("Item", Url.Action("Item"))
@Html.Hidden("Manage", Url.Action("Manage"))
@Html.Hidden("CheckAvailability", Url.Action("CheckAvailability"))